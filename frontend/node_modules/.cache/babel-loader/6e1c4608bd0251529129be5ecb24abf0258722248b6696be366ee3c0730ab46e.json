{"ast":null,"code":"var _jsxFileName = \"/Users/om2k13/Desktop/Personalized-Investment-Recommendation-App/frontend/src/pages/Investment.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from \"react\";\nimport axios from \"axios\";\nimport NavBar from \"../components/NavBar\";\nimport debounce from \"lodash.debounce\";\nimport { Box, Card, Typography, Button, TextField, Select, MenuItem, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper, Alert, CircularProgress, Autocomplete } from \"@mui/material\";\nimport { motion } from \"framer-motion\";\nimport AddCircleOutlineIcon from '@mui/icons-material/AddCircleOutline';\nimport SellIcon from '@mui/icons-material/Sell';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction formatDate(date) {\n  if (!date) return \"-\";\n  try {\n    const d = typeof date === 'string' ? new Date(date.replace(/Z?$/, 'Z')) : new Date(date);\n    if (isNaN(d.getTime())) return \"-\";\n    return d.toLocaleDateString();\n  } catch {\n    return \"-\";\n  }\n}\nfunction Investment() {\n  _s();\n  const [type, setType] = useState(\"Stock\");\n  const [amount, setAmount] = useState(\"\");\n  const [expectedReturn, setExpectedReturn] = useState(\"\");\n  const [investments, setInvestments] = useState([]);\n  const [msg, setMsg] = useState(\"\");\n  const [options, setOptions] = useState([]);\n  const [selectedCompany, setSelectedCompany] = useState(\"\");\n  const [search, setSearch] = useState(\"\");\n  const [suggestions, setSuggestions] = useState([]);\n  const [showSuggestions, setShowSuggestions] = useState(false);\n  const [searchError, setSearchError] = useState(\"\");\n  const [stockQuery, setStockQuery] = useState(\"\");\n  const [stockSuggestions, setStockSuggestions] = useState([]);\n  const [showStockSuggestions, setShowStockSuggestions] = useState(false);\n  const [mfQuery, setMfQuery] = useState(\"\");\n  const [mfSuggestions, setMfSuggestions] = useState([]);\n  const [showMfSuggestions, setShowMfSuggestions] = useState(false);\n  const [virtualBalance, setVirtualBalance] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const fetchInvestments = async () => {\n    const res = await axios.get(\"/api/investments\", {\n      headers: {\n        Authorization: `Bearer ${localStorage.getItem(\"token\")}`\n      }\n    });\n    setInvestments(res.data);\n  };\n  const fetchOptions = async t => {\n    const res = await axios.get(`/api/investment-options?type=${t}`);\n    setOptions(res.data);\n    setSelectedCompany(\"\");\n    setExpectedReturn(\"\");\n  };\n\n  // Debounced stock search\n  const fetchStockSuggestions = debounce(async query => {\n    try {\n      const res = await axios.get(`/api/stocks/search?query=${encodeURIComponent(query || '')}`);\n      setStockSuggestions(res.data);\n    } catch {\n      setStockSuggestions([]);\n    }\n  }, 400);\n\n  // Debounced mutual fund search\n  const fetchMfSuggestions = debounce(async query => {\n    try {\n      const res = await axios.get(`/api/mutualfunds/search?query=${encodeURIComponent(query || '')}`);\n      setMfSuggestions(res.data);\n    } catch {\n      setMfSuggestions([]);\n    }\n  }, 400);\n  useEffect(() => {\n    fetchInvestments();\n    fetchOptions(type);\n    // Fetch user profile for virtual balance\n    const fetchProfile = async () => {\n      try {\n        const token = localStorage.getItem(\"token\");\n        const headers = {\n          Authorization: `Bearer ${token}`\n        };\n        const res = await axios.get(\"/api/profile\", {\n          headers\n        });\n        setVirtualBalance(res.data.virtual_balance);\n      } catch {\n        setVirtualBalance(null);\n      }\n    };\n    fetchProfile();\n  }, []);\n  useEffect(() => {\n    fetchOptions(type);\n  }, [type]);\n  useEffect(() => {\n    if (type === \"Stock\") {\n      fetchStockSuggestions(stockQuery);\n    }\n  }, [stockQuery, type]);\n  useEffect(() => {\n    if (type === \"Mutual Fund\") {\n      fetchMfSuggestions(mfQuery);\n    }\n  }, [mfQuery, type]);\n  const handleAdd = async e => {\n    e.preventDefault();\n    setMsg(\"\");\n    if (!type || !selectedCompany || !amount || !expectedReturn) {\n      setMsg(\"All fields are required.\");\n      return;\n    }\n    let cleanReturn = expectedReturn;\n    if (typeof cleanReturn === \"string\") {\n      cleanReturn = cleanReturn.replace(\"%\", \"\").trim();\n    }\n    const amt = Number(amount);\n    if (isNaN(amt) || amt <= 0) {\n      setMsg(\"Amount must be a positive number.\");\n      return;\n    }\n    if (virtualBalance !== null && amt > virtualBalance) {\n      setMsg(\"Insufficient funds: amount exceeds your virtual balance.\");\n      return;\n    }\n    setLoading(true);\n    try {\n      await axios.post(\"/api/investments\", {\n        type,\n        company: selectedCompany,\n        amount: amt,\n        expected_return: Number(cleanReturn)\n      }, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`\n        }\n      });\n      setMsg(\"Investment added\");\n      setAmount(\"\");\n      setExpectedReturn(\"\");\n      setSelectedCompany(\"\");\n      fetchInvestments();\n      // Update balance after investment\n      const token = localStorage.getItem(\"token\");\n      const headers = {\n        Authorization: `Bearer ${token}`\n      };\n      const res = await axios.get(\"/api/profile\", {\n        headers\n      });\n      setVirtualBalance(res.data.virtual_balance);\n    } catch {\n      setMsg(\"Failed to add investment\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleSell = async id => {\n    setLoading(true);\n    try {\n      await axios.post(`/api/investments/${id}/sell`, {}, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`\n        }\n      });\n      setMsg(\"Investment sold\");\n      fetchInvestments();\n    } catch {\n      setMsg(\"Failed to sell investment\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(motion.div, {\n      initial: {\n        x: -100,\n        opacity: 0\n      },\n      animate: {\n        x: 0,\n        opacity: 1\n      },\n      transition: {\n        duration: 0.7\n      },\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          bgcolor: 'background.default',\n          minHeight: '100vh',\n          py: 4\n        },\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            maxWidth: 1000,\n            mx: 'auto',\n            px: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(motion.div, {\n            initial: {\n              opacity: 0,\n              y: 40\n            },\n            animate: {\n              opacity: 1,\n              y: 0\n            },\n            transition: {\n              duration: 0.7,\n              type: \"spring\"\n            },\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              elevation: 8,\n              sx: {\n                borderRadius: 4,\n                p: 4,\n                mb: 4,\n                background: 'linear-gradient(120deg, #232526 0%, #414345 100%)',\n                color: 'white'\n              },\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h4\",\n                fontWeight: 700,\n                sx: {\n                  mb: 2,\n                  background: 'linear-gradient(90deg, #00c6ff 0%, #0072ff 100%)',\n                  WebkitBackgroundClip: 'text',\n                  WebkitTextFillColor: 'transparent'\n                },\n                children: \"Virtual Investments\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 187,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"subtitle1\",\n                sx: {\n                  mb: 2,\n                  color: 'rgba(255,255,255,0.8)'\n                },\n                children: [\"Virtual Balance: \\u20B9\", virtualBalance !== null ? virtualBalance : '...']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 190,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                component: \"form\",\n                onSubmit: handleAdd,\n                autoComplete: \"off\",\n                sx: {\n                  display: 'flex',\n                  flexWrap: 'wrap',\n                  gap: 2,\n                  alignItems: 'center',\n                  mb: 2\n                },\n                children: [/*#__PURE__*/_jsxDEV(Select, {\n                  value: type,\n                  onChange: e => setType(e.target.value),\n                  variant: \"filled\",\n                  sx: {\n                    minWidth: 140,\n                    bgcolor: 'rgba(255,255,255,0.05)',\n                    color: 'white'\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: \"Stock\",\n                    children: \"Stock\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 200,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: \"Mutual Fund\",\n                    children: \"Mutual Fund\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 201,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 194,\n                  columnNumber: 19\n                }, this), type === \"Stock\" ? /*#__PURE__*/_jsxDEV(Autocomplete, {\n                  freeSolo: true,\n                  options: stockSuggestions.map(s => s.name),\n                  inputValue: stockQuery,\n                  onInputChange: (_, newInputValue) => setStockQuery(newInputValue),\n                  onChange: (_, newValue) => {\n                    setSelectedCompany(newValue || \"\");\n                    const found = stockSuggestions.find(s => s.name === newValue);\n                    if (found && found.expected_return !== undefined) setExpectedReturn(String(found.expected_return));\n                  },\n                  renderInput: params => /*#__PURE__*/_jsxDEV(TextField, {\n                    ...params,\n                    label: \"Search Stock\",\n                    variant: \"filled\",\n                    sx: {\n                      bgcolor: 'rgba(255,255,255,0.05)',\n                      minWidth: 200,\n                      input: {\n                        color: 'white'\n                      },\n                      label: {\n                        color: 'rgba(255,255,255,0.7)'\n                      }\n                    },\n                    InputLabelProps: {\n                      style: {\n                        color: 'rgba(255,255,255,0.7)'\n                      }\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 215,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 204,\n                  columnNumber: 21\n                }, this) : /*#__PURE__*/_jsxDEV(Autocomplete, {\n                  freeSolo: true,\n                  options: mfSuggestions.map(f => f.name),\n                  inputValue: mfQuery,\n                  onInputChange: (_, newInputValue) => setMfQuery(newInputValue),\n                  onChange: (_, newValue) => {\n                    setSelectedCompany(newValue || \"\");\n                    const found = mfSuggestions.find(f => f.name === newValue);\n                    if (found && found.expected_return !== undefined) setExpectedReturn(String(found.expected_return));\n                  },\n                  renderInput: params => /*#__PURE__*/_jsxDEV(TextField, {\n                    ...params,\n                    label: \"Search Mutual Fund\",\n                    variant: \"filled\",\n                    sx: {\n                      bgcolor: 'rgba(255,255,255,0.05)',\n                      minWidth: 200,\n                      input: {\n                        color: 'white'\n                      },\n                      label: {\n                        color: 'rgba(255,255,255,0.7)'\n                      }\n                    },\n                    InputLabelProps: {\n                      style: {\n                        color: 'rgba(255,255,255,0.7)'\n                      }\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 230,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 219,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                  type: \"number\",\n                  label: \"Amount\",\n                  value: amount,\n                  onChange: e => setAmount(e.target.value),\n                  variant: \"filled\",\n                  sx: {\n                    minWidth: 120,\n                    bgcolor: 'rgba(255,255,255,0.05)',\n                    input: {\n                      color: 'white'\n                    },\n                    label: {\n                      color: 'rgba(255,255,255,0.7)'\n                    }\n                  },\n                  InputLabelProps: {\n                    style: {\n                      color: 'rgba(255,255,255,0.7)'\n                    }\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 234,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                  type: \"text\",\n                  label: \"Expected Return %\",\n                  value: expectedReturn,\n                  InputProps: {\n                    readOnly: true\n                  },\n                  onChange: () => {} // Prevent editing\n                  ,\n                  variant: \"filled\",\n                  sx: {\n                    minWidth: 160,\n                    bgcolor: 'rgba(255,255,255,0.05)',\n                    input: {\n                      color: 'white'\n                    },\n                    label: {\n                      color: 'rgba(255,255,255,0.7)'\n                    }\n                  },\n                  InputLabelProps: {\n                    style: {\n                      color: 'rgba(255,255,255,0.7)'\n                    }\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 243,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  type: \"submit\",\n                  variant: \"contained\",\n                  color: \"primary\",\n                  startIcon: /*#__PURE__*/_jsxDEV(AddCircleOutlineIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 257,\n                    columnNumber: 32\n                  }, this),\n                  sx: {\n                    borderRadius: 2,\n                    fontWeight: 700,\n                    boxShadow: 3,\n                    minWidth: 180\n                  },\n                  disabled: loading,\n                  children: loading ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n                    size: 22,\n                    color: \"inherit\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 261,\n                    columnNumber: 32\n                  }, this) : \"Add Investment\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 253,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 193,\n                columnNumber: 17\n              }, this), msg && /*#__PURE__*/_jsxDEV(Alert, {\n                severity: msg.includes('fail') ? 'error' : msg.includes('added') ? 'success' : 'info',\n                sx: {\n                  mb: 2\n                },\n                children: msg\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 264,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(motion.div, {\n            initial: {\n              opacity: 0,\n              y: 40\n            },\n            animate: {\n              opacity: 1,\n              y: 0\n            },\n            transition: {\n              duration: 0.8,\n              type: \"spring\"\n            },\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              elevation: 6,\n              sx: {\n                borderRadius: 3,\n                p: 3,\n                background: 'linear-gradient(120deg, #232526 0%, #414345 100%)',\n                color: 'white'\n              },\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h5\",\n                fontWeight: 700,\n                sx: {\n                  mb: 2,\n                  color: 'white'\n                },\n                children: \"Current Investments\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 273,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n                component: Paper,\n                sx: {\n                  background: 'rgba(255,255,255,0.03)',\n                  borderRadius: 3\n                },\n                children: /*#__PURE__*/_jsxDEV(Table, {\n                  children: [/*#__PURE__*/_jsxDEV(TableHead, {\n                    children: /*#__PURE__*/_jsxDEV(TableRow, {\n                      children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                        sx: {\n                          color: 'white',\n                          fontWeight: 700,\n                          background: 'rgba(0,0,0,0.2)'\n                        },\n                        children: \"Type\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 280,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                        sx: {\n                          color: 'white',\n                          fontWeight: 700,\n                          background: 'rgba(0,0,0,0.2)'\n                        },\n                        children: \"Company\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 281,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                        sx: {\n                          color: 'white',\n                          fontWeight: 700,\n                          background: 'rgba(0,0,0,0.2)'\n                        },\n                        children: \"Amount\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 282,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                        sx: {\n                          color: 'white',\n                          fontWeight: 700,\n                          background: 'rgba(0,0,0,0.2)'\n                        },\n                        children: \"Expected Return %\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 283,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                        sx: {\n                          color: 'white',\n                          fontWeight: 700,\n                          background: 'rgba(0,0,0,0.2)'\n                        },\n                        children: \"Date Invested\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 284,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                        sx: {\n                          color: 'white',\n                          fontWeight: 700,\n                          background: 'rgba(0,0,0,0.2)'\n                        },\n                        children: \"Action\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 285,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 279,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 278,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n                    children: investments.map(inv => /*#__PURE__*/_jsxDEV(TableRow, {\n                      hover: true,\n                      children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                        sx: {\n                          color: 'white'\n                        },\n                        children: inv.type\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 291,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                        sx: {\n                          color: 'white'\n                        },\n                        children: inv.company || \"-\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 292,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                        sx: {\n                          color: 'white'\n                        },\n                        children: inv.amount\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 293,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                        sx: {\n                          color: 'white'\n                        },\n                        children: inv.expected_return !== undefined ? inv.expected_return : \"-\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 294,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                        sx: {\n                          color: 'white'\n                        },\n                        children: formatDate(inv.date_invested)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 295,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                        children: /*#__PURE__*/_jsxDEV(Button, {\n                          onClick: () => handleSell(inv._id),\n                          variant: \"contained\",\n                          color: \"secondary\",\n                          startIcon: /*#__PURE__*/_jsxDEV(SellIcon, {}, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 301,\n                            columnNumber: 42\n                          }, this),\n                          sx: {\n                            borderRadius: 2,\n                            fontWeight: 700\n                          },\n                          disabled: loading,\n                          children: \"Sell\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 297,\n                          columnNumber: 29\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 296,\n                        columnNumber: 27\n                      }, this)]\n                    }, inv._id, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 290,\n                      columnNumber: 25\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 288,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 277,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 276,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 272,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(Investment, \"b0UKfl20BU2X+m5cRVKci1Jk4Yg=\");\n_c = Investment;\nexport default Investment;\nvar _c;\n$RefreshReg$(_c, \"Investment\");","map":{"version":3,"names":["React","useEffect","useState","useRef","axios","NavBar","debounce","Box","Card","Typography","Button","TextField","Select","MenuItem","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","Alert","CircularProgress","Autocomplete","motion","AddCircleOutlineIcon","SellIcon","jsxDEV","_jsxDEV","Fragment","_Fragment","formatDate","date","d","Date","replace","isNaN","getTime","toLocaleDateString","Investment","_s","type","setType","amount","setAmount","expectedReturn","setExpectedReturn","investments","setInvestments","msg","setMsg","options","setOptions","selectedCompany","setSelectedCompany","search","setSearch","suggestions","setSuggestions","showSuggestions","setShowSuggestions","searchError","setSearchError","stockQuery","setStockQuery","stockSuggestions","setStockSuggestions","showStockSuggestions","setShowStockSuggestions","mfQuery","setMfQuery","mfSuggestions","setMfSuggestions","showMfSuggestions","setShowMfSuggestions","virtualBalance","setVirtualBalance","loading","setLoading","fetchInvestments","res","get","headers","Authorization","localStorage","getItem","data","fetchOptions","t","fetchStockSuggestions","query","encodeURIComponent","fetchMfSuggestions","fetchProfile","token","virtual_balance","handleAdd","e","preventDefault","cleanReturn","trim","amt","Number","post","company","expected_return","handleSell","id","children","fileName","_jsxFileName","lineNumber","columnNumber","div","initial","x","opacity","animate","transition","duration","sx","bgcolor","minHeight","py","maxWidth","mx","px","y","elevation","borderRadius","p","mb","background","color","variant","fontWeight","WebkitBackgroundClip","WebkitTextFillColor","component","onSubmit","autoComplete","display","flexWrap","gap","alignItems","value","onChange","target","minWidth","freeSolo","map","s","name","inputValue","onInputChange","_","newInputValue","newValue","found","find","undefined","String","renderInput","params","label","input","InputLabelProps","style","f","InputProps","readOnly","startIcon","boxShadow","disabled","size","severity","includes","inv","hover","date_invested","onClick","_id","_c","$RefreshReg$"],"sources":["/Users/om2k13/Desktop/Personalized-Investment-Recommendation-App/frontend/src/pages/Investment.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\nimport axios from \"axios\";\nimport NavBar from \"../components/NavBar\";\nimport debounce from \"lodash.debounce\";\nimport { Box, Card, Typography, Button, TextField, Select, MenuItem, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper, Alert, CircularProgress, Autocomplete } from \"@mui/material\";\nimport { motion } from \"framer-motion\";\nimport AddCircleOutlineIcon from '@mui/icons-material/AddCircleOutline';\nimport SellIcon from '@mui/icons-material/Sell';\n\nfunction formatDate(date) {\n  if (!date) return \"-\";\n  try {\n    const d = typeof date === 'string' ? new Date(date.replace(/Z?$/, 'Z')) : new Date(date);\n    if (isNaN(d.getTime())) return \"-\";\n    return d.toLocaleDateString();\n  } catch {\n    return \"-\";\n  }\n}\n\nfunction Investment() {\n  const [type, setType] = useState(\"Stock\");\n  const [amount, setAmount] = useState(\"\");\n  const [expectedReturn, setExpectedReturn] = useState(\"\");\n  const [investments, setInvestments] = useState([]);\n  const [msg, setMsg] = useState(\"\");\n  const [options, setOptions] = useState([]);\n  const [selectedCompany, setSelectedCompany] = useState(\"\");\n  const [search, setSearch] = useState(\"\");\n  const [suggestions, setSuggestions] = useState([]);\n  const [showSuggestions, setShowSuggestions] = useState(false);\n  const [searchError, setSearchError] = useState(\"\");\n  const [stockQuery, setStockQuery] = useState(\"\");\n  const [stockSuggestions, setStockSuggestions] = useState([]);\n  const [showStockSuggestions, setShowStockSuggestions] = useState(false);\n  const [mfQuery, setMfQuery] = useState(\"\");\n  const [mfSuggestions, setMfSuggestions] = useState([]);\n  const [showMfSuggestions, setShowMfSuggestions] = useState(false);\n  const [virtualBalance, setVirtualBalance] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  const fetchInvestments = async () => {\n    const res = await axios.get(\"/api/investments\", {\n      headers: { Authorization: `Bearer ${localStorage.getItem(\"token\")}` }\n    });\n    setInvestments(res.data);\n  };\n\n  const fetchOptions = async (t) => {\n    const res = await axios.get(`/api/investment-options?type=${t}`);\n    setOptions(res.data);\n    setSelectedCompany(\"\");\n    setExpectedReturn(\"\");\n  };\n\n  // Debounced stock search\n  const fetchStockSuggestions = debounce(async (query) => {\n    try {\n      const res = await axios.get(`/api/stocks/search?query=${encodeURIComponent(query || '')}`);\n      setStockSuggestions(res.data);\n    } catch {\n      setStockSuggestions([]);\n    }\n  }, 400);\n\n  // Debounced mutual fund search\n  const fetchMfSuggestions = debounce(async (query) => {\n    try {\n      const res = await axios.get(`/api/mutualfunds/search?query=${encodeURIComponent(query || '')}`);\n      setMfSuggestions(res.data);\n    } catch {\n      setMfSuggestions([]);\n    }\n  }, 400);\n\n  useEffect(() => {\n    fetchInvestments();\n    fetchOptions(type);\n    // Fetch user profile for virtual balance\n    const fetchProfile = async () => {\n      try {\n        const token = localStorage.getItem(\"token\");\n        const headers = { Authorization: `Bearer ${token}` };\n        const res = await axios.get(\"/api/profile\", { headers });\n        setVirtualBalance(res.data.virtual_balance);\n      } catch {\n        setVirtualBalance(null);\n      }\n    };\n    fetchProfile();\n  }, []);\n\n  useEffect(() => {\n    fetchOptions(type);\n  }, [type]);\n\n  useEffect(() => {\n    if (type === \"Stock\") {\n      fetchStockSuggestions(stockQuery);\n    }\n  }, [stockQuery, type]);\n\n  useEffect(() => {\n    if (type === \"Mutual Fund\") {\n      fetchMfSuggestions(mfQuery);\n    }\n  }, [mfQuery, type]);\n\n  const handleAdd = async (e) => {\n    e.preventDefault();\n    setMsg(\"\");\n    if (!type || !selectedCompany || !amount || !expectedReturn) {\n      setMsg(\"All fields are required.\");\n      return;\n    }\n    let cleanReturn = expectedReturn;\n    if (typeof cleanReturn === \"string\") {\n      cleanReturn = cleanReturn.replace(\"%\", \"\").trim();\n    }\n    const amt = Number(amount);\n    if (isNaN(amt) || amt <= 0) {\n      setMsg(\"Amount must be a positive number.\");\n      return;\n    }\n    if (virtualBalance !== null && amt > virtualBalance) {\n      setMsg(\"Insufficient funds: amount exceeds your virtual balance.\");\n      return;\n    }\n    setLoading(true);\n    try {\n      await axios.post(\"/api/investments\", {\n        type,\n        company: selectedCompany,\n        amount: amt,\n        expected_return: Number(cleanReturn)\n      }, {\n        headers: { Authorization: `Bearer ${localStorage.getItem(\"token\")}` }\n      });\n      setMsg(\"Investment added\");\n      setAmount(\"\");\n      setExpectedReturn(\"\");\n      setSelectedCompany(\"\");\n      fetchInvestments();\n      // Update balance after investment\n      const token = localStorage.getItem(\"token\");\n      const headers = { Authorization: `Bearer ${token}` };\n      const res = await axios.get(\"/api/profile\", { headers });\n      setVirtualBalance(res.data.virtual_balance);\n    } catch {\n      setMsg(\"Failed to add investment\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleSell = async (id) => {\n    setLoading(true);\n    try {\n      await axios.post(`/api/investments/${id}/sell`, {}, {\n        headers: { Authorization: `Bearer ${localStorage.getItem(\"token\")}` }\n      });\n      setMsg(\"Investment sold\");\n      fetchInvestments();\n    } catch {\n      setMsg(\"Failed to sell investment\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <>\n      <NavBar />\n      <motion.div\n        initial={{ x: -100, opacity: 0 }}\n        animate={{ x: 0, opacity: 1 }}\n        transition={{ duration: 0.7 }}\n      >\n        <Box sx={{ bgcolor: 'background.default', minHeight: '100vh', py: 4 }}>\n          <Box sx={{ maxWidth: 1000, mx: 'auto', px: 2 }}>\n            <motion.div\n              initial={{ opacity: 0, y: 40 }}\n              animate={{ opacity: 1, y: 0 }}\n              transition={{ duration: 0.7, type: \"spring\" }}\n            >\n              <Card elevation={8} sx={{ borderRadius: 4, p: 4, mb: 4, background: 'linear-gradient(120deg, #232526 0%, #414345 100%)', color: 'white' }}>\n                <Typography variant=\"h4\" fontWeight={700} sx={{ mb: 2, background: 'linear-gradient(90deg, #00c6ff 0%, #0072ff 100%)', WebkitBackgroundClip: 'text', WebkitTextFillColor: 'transparent' }}>\n                  Virtual Investments\n                </Typography>\n                <Typography variant=\"subtitle1\" sx={{ mb: 2, color: 'rgba(255,255,255,0.8)' }}>\n                  Virtual Balance: ₹{virtualBalance !== null ? virtualBalance : '...'}\n                </Typography>\n                <Box component=\"form\" onSubmit={handleAdd} autoComplete=\"off\" sx={{ display: 'flex', flexWrap: 'wrap', gap: 2, alignItems: 'center', mb: 2 }}>\n                  <Select\n                    value={type}\n                    onChange={e => setType(e.target.value)}\n                    variant=\"filled\"\n                    sx={{ minWidth: 140, bgcolor: 'rgba(255,255,255,0.05)', color: 'white' }}\n                  >\n                    <MenuItem value=\"Stock\">Stock</MenuItem>\n                    <MenuItem value=\"Mutual Fund\">Mutual Fund</MenuItem>\n                  </Select>\n                  {type === \"Stock\" ? (\n                    <Autocomplete\n                      freeSolo\n                      options={stockSuggestions.map(s => s.name)}\n                      inputValue={stockQuery}\n                      onInputChange={(_, newInputValue) => setStockQuery(newInputValue)}\n                      onChange={(_, newValue) => {\n                        setSelectedCompany(newValue || \"\");\n                        const found = stockSuggestions.find(s => s.name === newValue);\n                        if (found && found.expected_return !== undefined) setExpectedReturn(String(found.expected_return));\n                      }}\n                      renderInput={(params) => (\n                        <TextField {...params} label=\"Search Stock\" variant=\"filled\" sx={{ bgcolor: 'rgba(255,255,255,0.05)', minWidth: 200, input: { color: 'white' }, label: { color: 'rgba(255,255,255,0.7)' } }} InputLabelProps={{ style: { color: 'rgba(255,255,255,0.7)' } }} />\n                      )}\n                    />\n                  ) : (\n                    <Autocomplete\n                      freeSolo\n                      options={mfSuggestions.map(f => f.name)}\n                      inputValue={mfQuery}\n                      onInputChange={(_, newInputValue) => setMfQuery(newInputValue)}\n                      onChange={(_, newValue) => {\n                        setSelectedCompany(newValue || \"\");\n                        const found = mfSuggestions.find(f => f.name === newValue);\n                        if (found && found.expected_return !== undefined) setExpectedReturn(String(found.expected_return));\n                      }}\n                      renderInput={(params) => (\n                        <TextField {...params} label=\"Search Mutual Fund\" variant=\"filled\" sx={{ bgcolor: 'rgba(255,255,255,0.05)', minWidth: 200, input: { color: 'white' }, label: { color: 'rgba(255,255,255,0.7)' } }} InputLabelProps={{ style: { color: 'rgba(255,255,255,0.7)' } }} />\n                      )}\n                    />\n                  )}\n                  <TextField\n                    type=\"number\"\n                    label=\"Amount\"\n                    value={amount}\n                    onChange={e => setAmount(e.target.value)}\n                    variant=\"filled\"\n                    sx={{ minWidth: 120, bgcolor: 'rgba(255,255,255,0.05)', input: { color: 'white' }, label: { color: 'rgba(255,255,255,0.7)' } }}\n                    InputLabelProps={{ style: { color: 'rgba(255,255,255,0.7)' } }}\n                  />\n                  <TextField\n                    type=\"text\"\n                    label=\"Expected Return %\"\n                    value={expectedReturn}\n                    InputProps={{ readOnly: true }}\n                    onChange={() => {}} // Prevent editing\n                    variant=\"filled\"\n                    sx={{ minWidth: 160, bgcolor: 'rgba(255,255,255,0.05)', input: { color: 'white' }, label: { color: 'rgba(255,255,255,0.7)' } }}\n                    InputLabelProps={{ style: { color: 'rgba(255,255,255,0.7)' } }}\n                  />\n                  <Button\n                    type=\"submit\"\n                    variant=\"contained\"\n                    color=\"primary\"\n                    startIcon={<AddCircleOutlineIcon />}\n                    sx={{ borderRadius: 2, fontWeight: 700, boxShadow: 3, minWidth: 180 }}\n                    disabled={loading}\n                  >\n                    {loading ? <CircularProgress size={22} color=\"inherit\" /> : \"Add Investment\"}\n                  </Button>\n                </Box>\n                {msg && <Alert severity={msg.includes('fail') ? 'error' : msg.includes('added') ? 'success' : 'info'} sx={{ mb: 2 }}>{msg}</Alert>}\n              </Card>\n            </motion.div>\n            <motion.div\n              initial={{ opacity: 0, y: 40 }}\n              animate={{ opacity: 1, y: 0 }}\n              transition={{ duration: 0.8, type: \"spring\" }}\n            >\n              <Card elevation={6} sx={{ borderRadius: 3, p: 3, background: 'linear-gradient(120deg, #232526 0%, #414345 100%)', color: 'white' }}>\n                <Typography variant=\"h5\" fontWeight={700} sx={{ mb: 2, color: 'white' }}>\n                  Current Investments\n                </Typography>\n                <TableContainer component={Paper} sx={{ background: 'rgba(255,255,255,0.03)', borderRadius: 3 }}>\n                  <Table>\n                    <TableHead>\n                      <TableRow>\n                        <TableCell sx={{ color: 'white', fontWeight: 700, background: 'rgba(0,0,0,0.2)' }}>Type</TableCell>\n                        <TableCell sx={{ color: 'white', fontWeight: 700, background: 'rgba(0,0,0,0.2)' }}>Company</TableCell>\n                        <TableCell sx={{ color: 'white', fontWeight: 700, background: 'rgba(0,0,0,0.2)' }}>Amount</TableCell>\n                        <TableCell sx={{ color: 'white', fontWeight: 700, background: 'rgba(0,0,0,0.2)' }}>Expected Return %</TableCell>\n                        <TableCell sx={{ color: 'white', fontWeight: 700, background: 'rgba(0,0,0,0.2)' }}>Date Invested</TableCell>\n                        <TableCell sx={{ color: 'white', fontWeight: 700, background: 'rgba(0,0,0,0.2)' }}>Action</TableCell>\n                      </TableRow>\n                    </TableHead>\n                    <TableBody>\n                      {investments.map(inv => (\n                        <TableRow key={inv._id} hover>\n                          <TableCell sx={{ color: 'white' }}>{inv.type}</TableCell>\n                          <TableCell sx={{ color: 'white' }}>{inv.company || \"-\"}</TableCell>\n                          <TableCell sx={{ color: 'white' }}>{inv.amount}</TableCell>\n                          <TableCell sx={{ color: 'white' }}>{inv.expected_return !== undefined ? inv.expected_return : \"-\"}</TableCell>\n                          <TableCell sx={{ color: 'white' }}>{formatDate(inv.date_invested)}</TableCell>\n                          <TableCell>\n                            <Button\n                              onClick={() => handleSell(inv._id)}\n                              variant=\"contained\"\n                              color=\"secondary\"\n                              startIcon={<SellIcon />}\n                              sx={{ borderRadius: 2, fontWeight: 700 }}\n                              disabled={loading}\n                            >\n                              Sell\n                            </Button>\n                          </TableCell>\n                        </TableRow>\n                      ))}\n                    </TableBody>\n                  </Table>\n                </TableContainer>\n              </Card>\n            </motion.div>\n          </Box>\n        </Box>\n      </motion.div>\n    </>\n  );\n}\n\nexport default Investment; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}