{"ast":null,"code":"var _jsxFileName = \"D:\\\\U7\\\\U7.1\\\\frontend\\\\src\\\\pages\\\\Investment.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from \"react\";\nimport axios from \"axios\";\nimport NavBar from \"../components/NavBar\";\nimport debounce from \"lodash.debounce\";\nimport { Box, Card, Typography, Button, TextField, Select, MenuItem, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper, Alert, CircularProgress, Autocomplete } from \"@mui/material\";\nimport { motion } from \"framer-motion\";\nimport AddCircleOutlineIcon from '@mui/icons-material/AddCircleOutline';\nimport SellIcon from '@mui/icons-material/Sell';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction formatDate(date) {\n  if (!date) return \"-\";\n  try {\n    const d = typeof date === 'string' ? new Date(date.replace(/Z?$/, 'Z')) : new Date(date);\n    if (isNaN(d.getTime())) return \"-\";\n    return d.toLocaleDateString();\n  } catch {\n    return \"-\";\n  }\n}\nfunction Investment() {\n  _s();\n  const [type, setType] = useState(\"Stock\");\n  const [amount, setAmount] = useState(\"\");\n  const [expectedReturn, setExpectedReturn] = useState(\"\");\n  const [investments, setInvestments] = useState([]);\n  const [msg, setMsg] = useState(\"\");\n  const [options, setOptions] = useState([]);\n  const [selectedCompany, setSelectedCompany] = useState(\"\");\n  const [search, setSearch] = useState(\"\");\n  const [suggestions, setSuggestions] = useState([]);\n  const [showSuggestions, setShowSuggestions] = useState(false);\n  const [searchError, setSearchError] = useState(\"\");\n  const [stockQuery, setStockQuery] = useState(\"\");\n  const [stockSuggestions, setStockSuggestions] = useState([]);\n  const [showStockSuggestions, setShowStockSuggestions] = useState(false);\n  const [mfQuery, setMfQuery] = useState(\"\");\n  const [mfSuggestions, setMfSuggestions] = useState([]);\n  const [showMfSuggestions, setShowMfSuggestions] = useState(false);\n  const [virtualBalance, setVirtualBalance] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const fetchInvestments = async () => {\n    const res = await axios.get(\"/api/investments\", {\n      headers: {\n        Authorization: `Bearer ${localStorage.getItem(\"token\")}`\n      }\n    });\n    setInvestments(res.data);\n  };\n  const fetchOptions = async t => {\n    const res = await axios.get(`/api/investment-options?type=${t}`);\n    setOptions(res.data);\n    setSelectedCompany(\"\");\n    setExpectedReturn(\"\");\n  };\n\n  // Debounced stock search\n  const fetchStockSuggestions = debounce(async query => {\n    try {\n      const res = await axios.get(`/api/stocks/search?query=${encodeURIComponent(query || '')}`);\n      setStockSuggestions(res.data);\n    } catch {\n      setStockSuggestions([]);\n    }\n  }, 400);\n\n  // Debounced mutual fund search\n  const fetchMfSuggestions = debounce(async query => {\n    try {\n      const res = await axios.get(`/api/mutualfunds/search?query=${encodeURIComponent(query || '')}`);\n      setMfSuggestions(res.data);\n    } catch {\n      setMfSuggestions([]);\n    }\n  }, 400);\n  useEffect(() => {\n    fetchInvestments();\n    fetchOptions(type);\n    // Fetch user profile for virtual balance\n    const fetchProfile = async () => {\n      try {\n        const token = localStorage.getItem(\"token\");\n        const headers = {\n          Authorization: `Bearer ${token}`\n        };\n        const res = await axios.get(\"/api/profile\", {\n          headers\n        });\n        setVirtualBalance(res.data.virtual_balance);\n      } catch {\n        setVirtualBalance(null);\n      }\n    };\n    fetchProfile();\n  }, []);\n  useEffect(() => {\n    fetchOptions(type);\n  }, [type]);\n  useEffect(() => {\n    if (type === \"Stock\") {\n      fetchStockSuggestions(stockQuery);\n    }\n  }, [stockQuery, type]);\n  useEffect(() => {\n    if (type === \"Mutual Fund\") {\n      fetchMfSuggestions(mfQuery);\n    }\n  }, [mfQuery, type]);\n  const handleAdd = async e => {\n    e.preventDefault();\n    setMsg(\"\");\n    if (!type || !selectedCompany || !amount || !expectedReturn) {\n      setMsg(\"All fields are required.\");\n      return;\n    }\n    let cleanReturn = expectedReturn;\n    if (typeof cleanReturn === \"string\") {\n      cleanReturn = cleanReturn.replace(\"%\", \"\").trim();\n    }\n    const amt = Number(amount);\n    if (isNaN(amt) || amt <= 0) {\n      setMsg(\"Amount must be a positive number.\");\n      return;\n    }\n    if (virtualBalance !== null && amt > virtualBalance) {\n      setMsg(\"Insufficient funds: amount exceeds your virtual balance.\");\n      return;\n    }\n    setLoading(true);\n    try {\n      await axios.post(\"/api/investments\", {\n        type,\n        company: selectedCompany,\n        amount: amt,\n        expected_return: Number(cleanReturn)\n      }, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`\n        }\n      });\n      setMsg(\"Investment added\");\n      setAmount(\"\");\n      setExpectedReturn(\"\");\n      setSelectedCompany(\"\");\n      fetchInvestments();\n      // Update balance after investment\n      const token = localStorage.getItem(\"token\");\n      const headers = {\n        Authorization: `Bearer ${token}`\n      };\n      const res = await axios.get(\"/api/profile\", {\n        headers\n      });\n      setVirtualBalance(res.data.virtual_balance);\n    } catch {\n      setMsg(\"Failed to add investment\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleSell = async id => {\n    setLoading(true);\n    try {\n      await axios.post(`/api/investments/${id}/sell`, {}, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`\n        }\n      });\n      setMsg(\"Investment sold\");\n      fetchInvestments();\n    } catch {\n      setMsg(\"Failed to sell investment\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        bgcolor: 'background.default',\n        minHeight: '100vh',\n        py: 4\n      },\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          maxWidth: 1000,\n          mx: 'auto',\n          px: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(motion.div, {\n          initial: {\n            opacity: 0,\n            y: 40\n          },\n          animate: {\n            opacity: 1,\n            y: 0\n          },\n          transition: {\n            duration: 0.7,\n            type: \"spring\"\n          },\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            elevation: 8,\n            sx: {\n              borderRadius: 4,\n              p: 4,\n              mb: 4,\n              background: 'linear-gradient(120deg, #232526 0%, #414345 100%)',\n              color: 'white'\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h4\",\n              fontWeight: 700,\n              sx: {\n                mb: 2,\n                background: 'linear-gradient(90deg, #00c6ff 0%, #0072ff 100%)',\n                WebkitBackgroundClip: 'text',\n                WebkitTextFillColor: 'transparent'\n              },\n              children: \"Virtual Investments\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"subtitle1\",\n              sx: {\n                mb: 2,\n                color: 'rgba(255,255,255,0.8)'\n              },\n              children: [\"Virtual Balance: \\u20B9\", virtualBalance !== null ? virtualBalance : '...']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              component: \"form\",\n              onSubmit: handleAdd,\n              autoComplete: \"off\",\n              sx: {\n                display: 'flex',\n                flexWrap: 'wrap',\n                gap: 2,\n                alignItems: 'center',\n                mb: 2\n              },\n              children: [/*#__PURE__*/_jsxDEV(Select, {\n                value: type,\n                onChange: e => setType(e.target.value),\n                variant: \"filled\",\n                sx: {\n                  minWidth: 140,\n                  bgcolor: 'rgba(255,255,255,0.05)',\n                  color: 'white'\n                },\n                children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"Stock\",\n                  children: \"Stock\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 195,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"Mutual Fund\",\n                  children: \"Mutual Fund\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 196,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 189,\n                columnNumber: 17\n              }, this), type === \"Stock\" ? /*#__PURE__*/_jsxDEV(Autocomplete, {\n                freeSolo: true,\n                options: stockSuggestions.map(s => s.name),\n                inputValue: stockQuery,\n                onInputChange: (_, newInputValue) => setStockQuery(newInputValue),\n                onChange: (_, newValue) => {\n                  setSelectedCompany(newValue || \"\");\n                  const found = stockSuggestions.find(s => s.name === newValue);\n                  if (found && found.expected_return !== undefined) setExpectedReturn(String(found.expected_return));\n                },\n                renderInput: params => /*#__PURE__*/_jsxDEV(TextField, {\n                  ...params,\n                  label: \"Search Stock\",\n                  variant: \"filled\",\n                  sx: {\n                    bgcolor: 'rgba(255,255,255,0.05)',\n                    minWidth: 200,\n                    input: {\n                      color: 'white'\n                    },\n                    label: {\n                      color: 'rgba(255,255,255,0.7)'\n                    }\n                  },\n                  InputLabelProps: {\n                    style: {\n                      color: 'rgba(255,255,255,0.7)'\n                    }\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 210,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 199,\n                columnNumber: 19\n              }, this) : /*#__PURE__*/_jsxDEV(Autocomplete, {\n                freeSolo: true,\n                options: mfSuggestions.map(f => f.name),\n                inputValue: mfQuery,\n                onInputChange: (_, newInputValue) => setMfQuery(newInputValue),\n                onChange: (_, newValue) => {\n                  setSelectedCompany(newValue || \"\");\n                  const found = mfSuggestions.find(f => f.name === newValue);\n                  if (found && found.expected_return !== undefined) setExpectedReturn(String(found.expected_return));\n                },\n                renderInput: params => /*#__PURE__*/_jsxDEV(TextField, {\n                  ...params,\n                  label: \"Search Mutual Fund\",\n                  variant: \"filled\",\n                  sx: {\n                    bgcolor: 'rgba(255,255,255,0.05)',\n                    minWidth: 200,\n                    input: {\n                      color: 'white'\n                    },\n                    label: {\n                      color: 'rgba(255,255,255,0.7)'\n                    }\n                  },\n                  InputLabelProps: {\n                    style: {\n                      color: 'rgba(255,255,255,0.7)'\n                    }\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 225,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 214,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                type: \"number\",\n                label: \"Amount\",\n                value: amount,\n                onChange: e => setAmount(e.target.value),\n                variant: \"filled\",\n                sx: {\n                  minWidth: 120,\n                  bgcolor: 'rgba(255,255,255,0.05)',\n                  input: {\n                    color: 'white'\n                  },\n                  label: {\n                    color: 'rgba(255,255,255,0.7)'\n                  }\n                },\n                InputLabelProps: {\n                  style: {\n                    color: 'rgba(255,255,255,0.7)'\n                  }\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 229,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                type: \"text\",\n                label: \"Expected Return %\",\n                value: expectedReturn,\n                onChange: e => setExpectedReturn(e.target.value),\n                variant: \"filled\",\n                sx: {\n                  minWidth: 160,\n                  bgcolor: 'rgba(255,255,255,0.05)',\n                  input: {\n                    color: 'white'\n                  },\n                  label: {\n                    color: 'rgba(255,255,255,0.7)'\n                  }\n                },\n                InputLabelProps: {\n                  style: {\n                    color: 'rgba(255,255,255,0.7)'\n                  }\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 238,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                type: \"submit\",\n                variant: \"contained\",\n                color: \"primary\",\n                startIcon: /*#__PURE__*/_jsxDEV(AddCircleOutlineIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 251,\n                  columnNumber: 30\n                }, this),\n                sx: {\n                  borderRadius: 2,\n                  fontWeight: 700,\n                  boxShadow: 3,\n                  minWidth: 180\n                },\n                disabled: loading,\n                children: loading ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n                  size: 22,\n                  color: \"inherit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 255,\n                  columnNumber: 30\n                }, this) : \"Add Investment\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 247,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 15\n            }, this), msg && /*#__PURE__*/_jsxDEV(Alert, {\n              severity: msg.includes('fail') ? 'error' : msg.includes('added') ? 'success' : 'info',\n              sx: {\n                mb: 2\n              },\n              children: msg\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 258,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(motion.div, {\n          initial: {\n            opacity: 0,\n            y: 40\n          },\n          animate: {\n            opacity: 1,\n            y: 0\n          },\n          transition: {\n            duration: 0.8,\n            type: \"spring\"\n          },\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            elevation: 6,\n            sx: {\n              borderRadius: 3,\n              p: 3,\n              background: 'linear-gradient(120deg, #232526 0%, #414345 100%)',\n              color: 'white'\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h5\",\n              fontWeight: 700,\n              sx: {\n                mb: 2,\n                color: 'white'\n              },\n              children: \"Current Investments\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 267,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n              component: Paper,\n              sx: {\n                background: 'rgba(255,255,255,0.03)',\n                borderRadius: 3\n              },\n              children: /*#__PURE__*/_jsxDEV(Table, {\n                children: [/*#__PURE__*/_jsxDEV(TableHead, {\n                  children: /*#__PURE__*/_jsxDEV(TableRow, {\n                    children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                      sx: {\n                        color: 'white',\n                        fontWeight: 700,\n                        background: 'rgba(0,0,0,0.2)'\n                      },\n                      children: \"Type\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 274,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      sx: {\n                        color: 'white',\n                        fontWeight: 700,\n                        background: 'rgba(0,0,0,0.2)'\n                      },\n                      children: \"Company\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 275,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      sx: {\n                        color: 'white',\n                        fontWeight: 700,\n                        background: 'rgba(0,0,0,0.2)'\n                      },\n                      children: \"Amount\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 276,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      sx: {\n                        color: 'white',\n                        fontWeight: 700,\n                        background: 'rgba(0,0,0,0.2)'\n                      },\n                      children: \"Expected Return %\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 277,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      sx: {\n                        color: 'white',\n                        fontWeight: 700,\n                        background: 'rgba(0,0,0,0.2)'\n                      },\n                      children: \"Date Invested\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 278,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      sx: {\n                        color: 'white',\n                        fontWeight: 700,\n                        background: 'rgba(0,0,0,0.2)'\n                      },\n                      children: \"Action\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 279,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 273,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 272,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n                  children: investments.map(inv => /*#__PURE__*/_jsxDEV(TableRow, {\n                    hover: true,\n                    children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                      sx: {\n                        color: 'white'\n                      },\n                      children: inv.type\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 285,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      sx: {\n                        color: 'white'\n                      },\n                      children: inv.company || \"-\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 286,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      sx: {\n                        color: 'white'\n                      },\n                      children: inv.amount\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 287,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      sx: {\n                        color: 'white'\n                      },\n                      children: inv.expected_return !== undefined ? inv.expected_return : \"-\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 288,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      sx: {\n                        color: 'white'\n                      },\n                      children: formatDate(inv.date_invested)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 289,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      children: /*#__PURE__*/_jsxDEV(Button, {\n                        onClick: () => handleSell(inv._id),\n                        variant: \"contained\",\n                        color: \"secondary\",\n                        startIcon: /*#__PURE__*/_jsxDEV(SellIcon, {}, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 295,\n                          columnNumber: 40\n                        }, this),\n                        sx: {\n                          borderRadius: 2,\n                          fontWeight: 700\n                        },\n                        disabled: loading,\n                        children: \"Sell\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 291,\n                        columnNumber: 27\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 290,\n                      columnNumber: 25\n                    }, this)]\n                  }, inv._id, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 284,\n                    columnNumber: 23\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 282,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 271,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 270,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(Investment, \"b0UKfl20BU2X+m5cRVKci1Jk4Yg=\");\n_c = Investment;\nexport default Investment;\nvar _c;\n$RefreshReg$(_c, \"Investment\");","map":{"version":3,"names":["React","useEffect","useState","useRef","axios","NavBar","debounce","Box","Card","Typography","Button","TextField","Select","MenuItem","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","Alert","CircularProgress","Autocomplete","motion","AddCircleOutlineIcon","SellIcon","jsxDEV","_jsxDEV","Fragment","_Fragment","formatDate","date","d","Date","replace","isNaN","getTime","toLocaleDateString","Investment","_s","type","setType","amount","setAmount","expectedReturn","setExpectedReturn","investments","setInvestments","msg","setMsg","options","setOptions","selectedCompany","setSelectedCompany","search","setSearch","suggestions","setSuggestions","showSuggestions","setShowSuggestions","searchError","setSearchError","stockQuery","setStockQuery","stockSuggestions","setStockSuggestions","showStockSuggestions","setShowStockSuggestions","mfQuery","setMfQuery","mfSuggestions","setMfSuggestions","showMfSuggestions","setShowMfSuggestions","virtualBalance","setVirtualBalance","loading","setLoading","fetchInvestments","res","get","headers","Authorization","localStorage","getItem","data","fetchOptions","t","fetchStockSuggestions","query","encodeURIComponent","fetchMfSuggestions","fetchProfile","token","virtual_balance","handleAdd","e","preventDefault","cleanReturn","trim","amt","Number","post","company","expected_return","handleSell","id","children","fileName","_jsxFileName","lineNumber","columnNumber","sx","bgcolor","minHeight","py","maxWidth","mx","px","div","initial","opacity","y","animate","transition","duration","elevation","borderRadius","p","mb","background","color","variant","fontWeight","WebkitBackgroundClip","WebkitTextFillColor","component","onSubmit","autoComplete","display","flexWrap","gap","alignItems","value","onChange","target","minWidth","freeSolo","map","s","name","inputValue","onInputChange","_","newInputValue","newValue","found","find","undefined","String","renderInput","params","label","input","InputLabelProps","style","f","startIcon","boxShadow","disabled","size","severity","includes","inv","hover","date_invested","onClick","_id","_c","$RefreshReg$"],"sources":["D:/U7/U7.1/frontend/src/pages/Investment.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\nimport axios from \"axios\";\nimport NavBar from \"../components/NavBar\";\nimport debounce from \"lodash.debounce\";\nimport { Box, Card, Typography, Button, TextField, Select, MenuItem, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper, Alert, CircularProgress, Autocomplete } from \"@mui/material\";\nimport { motion } from \"framer-motion\";\nimport AddCircleOutlineIcon from '@mui/icons-material/AddCircleOutline';\nimport SellIcon from '@mui/icons-material/Sell';\n\nfunction formatDate(date) {\n  if (!date) return \"-\";\n  try {\n    const d = typeof date === 'string' ? new Date(date.replace(/Z?$/, 'Z')) : new Date(date);\n    if (isNaN(d.getTime())) return \"-\";\n    return d.toLocaleDateString();\n  } catch {\n    return \"-\";\n  }\n}\n\nfunction Investment() {\n  const [type, setType] = useState(\"Stock\");\n  const [amount, setAmount] = useState(\"\");\n  const [expectedReturn, setExpectedReturn] = useState(\"\");\n  const [investments, setInvestments] = useState([]);\n  const [msg, setMsg] = useState(\"\");\n  const [options, setOptions] = useState([]);\n  const [selectedCompany, setSelectedCompany] = useState(\"\");\n  const [search, setSearch] = useState(\"\");\n  const [suggestions, setSuggestions] = useState([]);\n  const [showSuggestions, setShowSuggestions] = useState(false);\n  const [searchError, setSearchError] = useState(\"\");\n  const [stockQuery, setStockQuery] = useState(\"\");\n  const [stockSuggestions, setStockSuggestions] = useState([]);\n  const [showStockSuggestions, setShowStockSuggestions] = useState(false);\n  const [mfQuery, setMfQuery] = useState(\"\");\n  const [mfSuggestions, setMfSuggestions] = useState([]);\n  const [showMfSuggestions, setShowMfSuggestions] = useState(false);\n  const [virtualBalance, setVirtualBalance] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  const fetchInvestments = async () => {\n    const res = await axios.get(\"/api/investments\", {\n      headers: { Authorization: `Bearer ${localStorage.getItem(\"token\")}` }\n    });\n    setInvestments(res.data);\n  };\n\n  const fetchOptions = async (t) => {\n    const res = await axios.get(`/api/investment-options?type=${t}`);\n    setOptions(res.data);\n    setSelectedCompany(\"\");\n    setExpectedReturn(\"\");\n  };\n\n  // Debounced stock search\n  const fetchStockSuggestions = debounce(async (query) => {\n    try {\n      const res = await axios.get(`/api/stocks/search?query=${encodeURIComponent(query || '')}`);\n      setStockSuggestions(res.data);\n    } catch {\n      setStockSuggestions([]);\n    }\n  }, 400);\n\n  // Debounced mutual fund search\n  const fetchMfSuggestions = debounce(async (query) => {\n    try {\n      const res = await axios.get(`/api/mutualfunds/search?query=${encodeURIComponent(query || '')}`);\n      setMfSuggestions(res.data);\n    } catch {\n      setMfSuggestions([]);\n    }\n  }, 400);\n\n  useEffect(() => {\n    fetchInvestments();\n    fetchOptions(type);\n    // Fetch user profile for virtual balance\n    const fetchProfile = async () => {\n      try {\n        const token = localStorage.getItem(\"token\");\n        const headers = { Authorization: `Bearer ${token}` };\n        const res = await axios.get(\"/api/profile\", { headers });\n        setVirtualBalance(res.data.virtual_balance);\n      } catch {\n        setVirtualBalance(null);\n      }\n    };\n    fetchProfile();\n  }, []);\n\n  useEffect(() => {\n    fetchOptions(type);\n  }, [type]);\n\n  useEffect(() => {\n    if (type === \"Stock\") {\n      fetchStockSuggestions(stockQuery);\n    }\n  }, [stockQuery, type]);\n\n  useEffect(() => {\n    if (type === \"Mutual Fund\") {\n      fetchMfSuggestions(mfQuery);\n    }\n  }, [mfQuery, type]);\n\n  const handleAdd = async (e) => {\n    e.preventDefault();\n    setMsg(\"\");\n    if (!type || !selectedCompany || !amount || !expectedReturn) {\n      setMsg(\"All fields are required.\");\n      return;\n    }\n    let cleanReturn = expectedReturn;\n    if (typeof cleanReturn === \"string\") {\n      cleanReturn = cleanReturn.replace(\"%\", \"\").trim();\n    }\n    const amt = Number(amount);\n    if (isNaN(amt) || amt <= 0) {\n      setMsg(\"Amount must be a positive number.\");\n      return;\n    }\n    if (virtualBalance !== null && amt > virtualBalance) {\n      setMsg(\"Insufficient funds: amount exceeds your virtual balance.\");\n      return;\n    }\n    setLoading(true);\n    try {\n      await axios.post(\"/api/investments\", {\n        type,\n        company: selectedCompany,\n        amount: amt,\n        expected_return: Number(cleanReturn)\n      }, {\n        headers: { Authorization: `Bearer ${localStorage.getItem(\"token\")}` }\n      });\n      setMsg(\"Investment added\");\n      setAmount(\"\");\n      setExpectedReturn(\"\");\n      setSelectedCompany(\"\");\n      fetchInvestments();\n      // Update balance after investment\n      const token = localStorage.getItem(\"token\");\n      const headers = { Authorization: `Bearer ${token}` };\n      const res = await axios.get(\"/api/profile\", { headers });\n      setVirtualBalance(res.data.virtual_balance);\n    } catch {\n      setMsg(\"Failed to add investment\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleSell = async (id) => {\n    setLoading(true);\n    try {\n      await axios.post(`/api/investments/${id}/sell`, {}, {\n        headers: { Authorization: `Bearer ${localStorage.getItem(\"token\")}` }\n      });\n      setMsg(\"Investment sold\");\n      fetchInvestments();\n    } catch {\n      setMsg(\"Failed to sell investment\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <>\n      <NavBar />\n      <Box sx={{ bgcolor: 'background.default', minHeight: '100vh', py: 4 }}>\n        <Box sx={{ maxWidth: 1000, mx: 'auto', px: 2 }}>\n          <motion.div\n            initial={{ opacity: 0, y: 40 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.7, type: \"spring\" }}\n          >\n            <Card elevation={8} sx={{ borderRadius: 4, p: 4, mb: 4, background: 'linear-gradient(120deg, #232526 0%, #414345 100%)', color: 'white' }}>\n              <Typography variant=\"h4\" fontWeight={700} sx={{ mb: 2, background: 'linear-gradient(90deg, #00c6ff 0%, #0072ff 100%)', WebkitBackgroundClip: 'text', WebkitTextFillColor: 'transparent' }}>\n                Virtual Investments\n              </Typography>\n              <Typography variant=\"subtitle1\" sx={{ mb: 2, color: 'rgba(255,255,255,0.8)' }}>\n                Virtual Balance: ₹{virtualBalance !== null ? virtualBalance : '...'}\n              </Typography>\n              <Box component=\"form\" onSubmit={handleAdd} autoComplete=\"off\" sx={{ display: 'flex', flexWrap: 'wrap', gap: 2, alignItems: 'center', mb: 2 }}>\n                <Select\n                  value={type}\n                  onChange={e => setType(e.target.value)}\n                  variant=\"filled\"\n                  sx={{ minWidth: 140, bgcolor: 'rgba(255,255,255,0.05)', color: 'white' }}\n                >\n                  <MenuItem value=\"Stock\">Stock</MenuItem>\n                  <MenuItem value=\"Mutual Fund\">Mutual Fund</MenuItem>\n                </Select>\n                {type === \"Stock\" ? (\n                  <Autocomplete\n                    freeSolo\n                    options={stockSuggestions.map(s => s.name)}\n                    inputValue={stockQuery}\n                    onInputChange={(_, newInputValue) => setStockQuery(newInputValue)}\n                    onChange={(_, newValue) => {\n                      setSelectedCompany(newValue || \"\");\n                      const found = stockSuggestions.find(s => s.name === newValue);\n                      if (found && found.expected_return !== undefined) setExpectedReturn(String(found.expected_return));\n                    }}\n                    renderInput={(params) => (\n                      <TextField {...params} label=\"Search Stock\" variant=\"filled\" sx={{ bgcolor: 'rgba(255,255,255,0.05)', minWidth: 200, input: { color: 'white' }, label: { color: 'rgba(255,255,255,0.7)' } }} InputLabelProps={{ style: { color: 'rgba(255,255,255,0.7)' } }} />\n                    )}\n                  />\n                ) : (\n                  <Autocomplete\n                    freeSolo\n                    options={mfSuggestions.map(f => f.name)}\n                    inputValue={mfQuery}\n                    onInputChange={(_, newInputValue) => setMfQuery(newInputValue)}\n                    onChange={(_, newValue) => {\n                      setSelectedCompany(newValue || \"\");\n                      const found = mfSuggestions.find(f => f.name === newValue);\n                      if (found && found.expected_return !== undefined) setExpectedReturn(String(found.expected_return));\n                    }}\n                    renderInput={(params) => (\n                      <TextField {...params} label=\"Search Mutual Fund\" variant=\"filled\" sx={{ bgcolor: 'rgba(255,255,255,0.05)', minWidth: 200, input: { color: 'white' }, label: { color: 'rgba(255,255,255,0.7)' } }} InputLabelProps={{ style: { color: 'rgba(255,255,255,0.7)' } }} />\n                    )}\n                  />\n                )}\n                <TextField\n                  type=\"number\"\n                  label=\"Amount\"\n                  value={amount}\n                  onChange={e => setAmount(e.target.value)}\n                  variant=\"filled\"\n                  sx={{ minWidth: 120, bgcolor: 'rgba(255,255,255,0.05)', input: { color: 'white' }, label: { color: 'rgba(255,255,255,0.7)' } }}\n                  InputLabelProps={{ style: { color: 'rgba(255,255,255,0.7)' } }}\n                />\n                <TextField\n                  type=\"text\"\n                  label=\"Expected Return %\"\n                  value={expectedReturn}\n                  onChange={e => setExpectedReturn(e.target.value)}\n                  variant=\"filled\"\n                  sx={{ minWidth: 160, bgcolor: 'rgba(255,255,255,0.05)', input: { color: 'white' }, label: { color: 'rgba(255,255,255,0.7)' } }}\n                  InputLabelProps={{ style: { color: 'rgba(255,255,255,0.7)' } }}\n                />\n                <Button\n                  type=\"submit\"\n                  variant=\"contained\"\n                  color=\"primary\"\n                  startIcon={<AddCircleOutlineIcon />}\n                  sx={{ borderRadius: 2, fontWeight: 700, boxShadow: 3, minWidth: 180 }}\n                  disabled={loading}\n                >\n                  {loading ? <CircularProgress size={22} color=\"inherit\" /> : \"Add Investment\"}\n                </Button>\n              </Box>\n              {msg && <Alert severity={msg.includes('fail') ? 'error' : msg.includes('added') ? 'success' : 'info'} sx={{ mb: 2 }}>{msg}</Alert>}\n            </Card>\n          </motion.div>\n          <motion.div\n            initial={{ opacity: 0, y: 40 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.8, type: \"spring\" }}\n          >\n            <Card elevation={6} sx={{ borderRadius: 3, p: 3, background: 'linear-gradient(120deg, #232526 0%, #414345 100%)', color: 'white' }}>\n              <Typography variant=\"h5\" fontWeight={700} sx={{ mb: 2, color: 'white' }}>\n                Current Investments\n              </Typography>\n              <TableContainer component={Paper} sx={{ background: 'rgba(255,255,255,0.03)', borderRadius: 3 }}>\n                <Table>\n                  <TableHead>\n                    <TableRow>\n                      <TableCell sx={{ color: 'white', fontWeight: 700, background: 'rgba(0,0,0,0.2)' }}>Type</TableCell>\n                      <TableCell sx={{ color: 'white', fontWeight: 700, background: 'rgba(0,0,0,0.2)' }}>Company</TableCell>\n                      <TableCell sx={{ color: 'white', fontWeight: 700, background: 'rgba(0,0,0,0.2)' }}>Amount</TableCell>\n                      <TableCell sx={{ color: 'white', fontWeight: 700, background: 'rgba(0,0,0,0.2)' }}>Expected Return %</TableCell>\n                      <TableCell sx={{ color: 'white', fontWeight: 700, background: 'rgba(0,0,0,0.2)' }}>Date Invested</TableCell>\n                      <TableCell sx={{ color: 'white', fontWeight: 700, background: 'rgba(0,0,0,0.2)' }}>Action</TableCell>\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    {investments.map(inv => (\n                      <TableRow key={inv._id} hover>\n                        <TableCell sx={{ color: 'white' }}>{inv.type}</TableCell>\n                        <TableCell sx={{ color: 'white' }}>{inv.company || \"-\"}</TableCell>\n                        <TableCell sx={{ color: 'white' }}>{inv.amount}</TableCell>\n                        <TableCell sx={{ color: 'white' }}>{inv.expected_return !== undefined ? inv.expected_return : \"-\"}</TableCell>\n                        <TableCell sx={{ color: 'white' }}>{formatDate(inv.date_invested)}</TableCell>\n                        <TableCell>\n                          <Button\n                            onClick={() => handleSell(inv._id)}\n                            variant=\"contained\"\n                            color=\"secondary\"\n                            startIcon={<SellIcon />}\n                            sx={{ borderRadius: 2, fontWeight: 700 }}\n                            disabled={loading}\n                          >\n                            Sell\n                          </Button>\n                        </TableCell>\n                      </TableRow>\n                    ))}\n                  </TableBody>\n                </Table>\n              </TableContainer>\n            </Card>\n          </motion.div>\n        </Box>\n      </Box>\n    </>\n  );\n}\n\nexport default Investment; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}